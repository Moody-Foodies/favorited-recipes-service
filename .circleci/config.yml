# # Use the latest 2.1 version of CircleCI pipeline process engine.
# # See: https://circleci.com/docs/configuration-reference
# version: 2.1

# orbs:
#   heroku: circleci/heroku@x.y

# # Orchestrate jobs using workflows
# # See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
# workflows:
#   say-hello-workflow: # This is the name of the workflow, feel free to change it to better match your workflow.
#     # Inside the workflow, you define the jobs you want to run.
#     jobs:
#       - say-hello

#   heroku_deploy:
#       jobs:
#         - heroku/deploy-via-git:
#           post-steps:
#               - run: rails db:migrate #example of a post-deployment step
#             pre-steps:
#               - run: command-that-run-before-deploying #example of a pre-

version: '2.1'
orbs:
  node: circleci/node@x.y
  ruby: circleci/ruby@x.y
jobs:
  build:
    docker:
      - image: cimg/ruby:3.2.2-node
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          cache-key: yarn.lock
          pkg-manager: yarn
  checking:
    docker:
      - image: cimg/ruby:3.2.2-node
    steps:
      - checkout
      - ruby/install-deps
      - ruby/rubocop-check:
          format: progress
          label: Inspecting with Rubocop
  test:
    docker:
      - image: cimg/ruby:3.2.2-node
      - environment:
          POSTGRES_DB: favorite_recipes_service_test
          POSTGRES_PASSWORD: ''
          POSTGRES_USER: favorite_recipes_service
        image: circleci/postgres:9.5-alpine
    environment:
      BUNDLE_JOBS: '3'
      BUNDLE_RETRY: '3'
      PGHOST: 127.0.0.1
      PGPASSWORD: ''
      PGUSER: favorite_recipes_service
      RAILS_ENV: test
    parallelism: 3
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          cache-key: yarn.lock
          pkg-manager: yarn
      - run:
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
          name: Wait for DB
      - run:
          command: bundle exec rails db:schema:load --trace
          name: Database setup
      - ruby/rspec-test:
          include: spec/**/*_spec.rb
workflows:
  build_and_test:
    jobs:
      - build
      - checking
      - test:
          requires:
            - build
